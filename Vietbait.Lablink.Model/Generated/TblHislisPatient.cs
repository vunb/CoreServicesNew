using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Vietbait.Lablink.Model
{
	/// <summary>
	/// Strongly-typed collection for the TblHislisPatient class.
	/// </summary>
    [Serializable]
	public partial class TblHislisPatientCollection : ActiveList<TblHislisPatient, TblHislisPatientCollection>
	{	   
		public TblHislisPatientCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TblHislisPatientCollection</returns>
		public TblHislisPatientCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TblHislisPatient o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the tbl_HISLIS_Patients table.
	/// </summary>
	[Serializable]
	public partial class TblHislisPatient : ActiveRecord<TblHislisPatient>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TblHislisPatient()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TblHislisPatient(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TblHislisPatient(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TblHislisPatient(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("tbl_HISLIS_Patients", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMaBN = new TableSchema.TableColumn(schema);
				colvarMaBN.ColumnName = "MaBN";
				colvarMaBN.DataType = DbType.String;
				colvarMaBN.MaxLength = 10;
				colvarMaBN.AutoIncrement = false;
				colvarMaBN.IsNullable = true;
				colvarMaBN.IsPrimaryKey = false;
				colvarMaBN.IsForeignKey = false;
				colvarMaBN.IsReadOnly = false;
				colvarMaBN.DefaultSetting = @"";
				colvarMaBN.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBN);
				
				TableSchema.TableColumn colvarHoTen = new TableSchema.TableColumn(schema);
				colvarHoTen.ColumnName = "HoTen";
				colvarHoTen.DataType = DbType.String;
				colvarHoTen.MaxLength = 100;
				colvarHoTen.AutoIncrement = false;
				colvarHoTen.IsNullable = true;
				colvarHoTen.IsPrimaryKey = false;
				colvarHoTen.IsForeignKey = false;
				colvarHoTen.IsReadOnly = false;
				colvarHoTen.DefaultSetting = @"";
				colvarHoTen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHoTen);
				
				TableSchema.TableColumn colvarTuoi = new TableSchema.TableColumn(schema);
				colvarTuoi.ColumnName = "Tuoi";
				colvarTuoi.DataType = DbType.String;
				colvarTuoi.MaxLength = 3;
				colvarTuoi.AutoIncrement = false;
				colvarTuoi.IsNullable = true;
				colvarTuoi.IsPrimaryKey = false;
				colvarTuoi.IsForeignKey = false;
				colvarTuoi.IsReadOnly = false;
				colvarTuoi.DefaultSetting = @"";
				colvarTuoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuoi);
				
				TableSchema.TableColumn colvarGioiTinh = new TableSchema.TableColumn(schema);
				colvarGioiTinh.ColumnName = "GioiTinh";
				colvarGioiTinh.DataType = DbType.String;
				colvarGioiTinh.MaxLength = 5;
				colvarGioiTinh.AutoIncrement = false;
				colvarGioiTinh.IsNullable = true;
				colvarGioiTinh.IsPrimaryKey = false;
				colvarGioiTinh.IsForeignKey = false;
				colvarGioiTinh.IsReadOnly = false;
				colvarGioiTinh.DefaultSetting = @"";
				colvarGioiTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGioiTinh);
				
				TableSchema.TableColumn colvarSoPhong = new TableSchema.TableColumn(schema);
				colvarSoPhong.ColumnName = "SoPhong";
				colvarSoPhong.DataType = DbType.String;
				colvarSoPhong.MaxLength = 200;
				colvarSoPhong.AutoIncrement = false;
				colvarSoPhong.IsNullable = true;
				colvarSoPhong.IsPrimaryKey = false;
				colvarSoPhong.IsForeignKey = false;
				colvarSoPhong.IsReadOnly = false;
				colvarSoPhong.DefaultSetting = @"";
				colvarSoPhong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoPhong);
				
				TableSchema.TableColumn colvarSoGiuong = new TableSchema.TableColumn(schema);
				colvarSoGiuong.ColumnName = "SoGiuong";
				colvarSoGiuong.DataType = DbType.String;
				colvarSoGiuong.MaxLength = 50;
				colvarSoGiuong.AutoIncrement = false;
				colvarSoGiuong.IsNullable = true;
				colvarSoGiuong.IsPrimaryKey = false;
				colvarSoGiuong.IsForeignKey = false;
				colvarSoGiuong.IsReadOnly = false;
				colvarSoGiuong.DefaultSetting = @"";
				colvarSoGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoGiuong);
				
				TableSchema.TableColumn colvarNgayTraKetQua = new TableSchema.TableColumn(schema);
				colvarNgayTraKetQua.ColumnName = "NgayTraKetQua";
				colvarNgayTraKetQua.DataType = DbType.String;
				colvarNgayTraKetQua.MaxLength = 10;
				colvarNgayTraKetQua.AutoIncrement = false;
				colvarNgayTraKetQua.IsNullable = true;
				colvarNgayTraKetQua.IsPrimaryKey = false;
				colvarNgayTraKetQua.IsForeignKey = false;
				colvarNgayTraKetQua.IsReadOnly = false;
				colvarNgayTraKetQua.DefaultSetting = @"";
				colvarNgayTraKetQua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTraKetQua);
				
				TableSchema.TableColumn colvarBacSyChuyenKhoa = new TableSchema.TableColumn(schema);
				colvarBacSyChuyenKhoa.ColumnName = "BacSyChuyenKhoa";
				colvarBacSyChuyenKhoa.DataType = DbType.String;
				colvarBacSyChuyenKhoa.MaxLength = 100;
				colvarBacSyChuyenKhoa.AutoIncrement = false;
				colvarBacSyChuyenKhoa.IsNullable = true;
				colvarBacSyChuyenKhoa.IsPrimaryKey = false;
				colvarBacSyChuyenKhoa.IsForeignKey = false;
				colvarBacSyChuyenKhoa.IsReadOnly = false;
				colvarBacSyChuyenKhoa.DefaultSetting = @"";
				colvarBacSyChuyenKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBacSyChuyenKhoa);
				
				TableSchema.TableColumn colvarKhoa = new TableSchema.TableColumn(schema);
				colvarKhoa.ColumnName = "Khoa";
				colvarKhoa.DataType = DbType.String;
				colvarKhoa.MaxLength = 100;
				colvarKhoa.AutoIncrement = false;
				colvarKhoa.IsNullable = true;
				colvarKhoa.IsPrimaryKey = false;
				colvarKhoa.IsForeignKey = false;
				colvarKhoa.IsReadOnly = false;
				colvarKhoa.DefaultSetting = @"";
				colvarKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhoa);
				
				TableSchema.TableColumn colvarDoiTuong = new TableSchema.TableColumn(schema);
				colvarDoiTuong.ColumnName = "DoiTuong";
				colvarDoiTuong.DataType = DbType.String;
				colvarDoiTuong.MaxLength = 50;
				colvarDoiTuong.AutoIncrement = false;
				colvarDoiTuong.IsNullable = true;
				colvarDoiTuong.IsPrimaryKey = false;
				colvarDoiTuong.IsForeignKey = false;
				colvarDoiTuong.IsReadOnly = false;
				colvarDoiTuong.DefaultSetting = @"";
				colvarDoiTuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDoiTuong);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "ChanDoan";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 250;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = false;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarLoaiChiDinh = new TableSchema.TableColumn(schema);
				colvarLoaiChiDinh.ColumnName = "LoaiChiDinh";
				colvarLoaiChiDinh.DataType = DbType.AnsiString;
				colvarLoaiChiDinh.MaxLength = 5;
				colvarLoaiChiDinh.AutoIncrement = false;
				colvarLoaiChiDinh.IsNullable = true;
				colvarLoaiChiDinh.IsPrimaryKey = false;
				colvarLoaiChiDinh.IsForeignKey = false;
				colvarLoaiChiDinh.IsReadOnly = false;
				colvarLoaiChiDinh.DefaultSetting = @"";
				colvarLoaiChiDinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiChiDinh);
				
				TableSchema.TableColumn colvarSoPhieuChiDinh = new TableSchema.TableColumn(schema);
				colvarSoPhieuChiDinh.ColumnName = "SoPhieuChiDinh";
				colvarSoPhieuChiDinh.DataType = DbType.String;
				colvarSoPhieuChiDinh.MaxLength = 20;
				colvarSoPhieuChiDinh.AutoIncrement = false;
				colvarSoPhieuChiDinh.IsNullable = true;
				colvarSoPhieuChiDinh.IsPrimaryKey = false;
				colvarSoPhieuChiDinh.IsForeignKey = false;
				colvarSoPhieuChiDinh.IsReadOnly = false;
				colvarSoPhieuChiDinh.DefaultSetting = @"";
				colvarSoPhieuChiDinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoPhieuChiDinh);
				
				TableSchema.TableColumn colvarTenPhieuXetNghiem = new TableSchema.TableColumn(schema);
				colvarTenPhieuXetNghiem.ColumnName = "TenPhieuXetNghiem";
				colvarTenPhieuXetNghiem.DataType = DbType.String;
				colvarTenPhieuXetNghiem.MaxLength = 100;
				colvarTenPhieuXetNghiem.AutoIncrement = false;
				colvarTenPhieuXetNghiem.IsNullable = true;
				colvarTenPhieuXetNghiem.IsPrimaryKey = false;
				colvarTenPhieuXetNghiem.IsForeignKey = false;
				colvarTenPhieuXetNghiem.IsReadOnly = false;
				colvarTenPhieuXetNghiem.DefaultSetting = @"";
				colvarTenPhieuXetNghiem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenPhieuXetNghiem);
				
				TableSchema.TableColumn colvarNgayChiDinh = new TableSchema.TableColumn(schema);
				colvarNgayChiDinh.ColumnName = "NgayChiDinh";
				colvarNgayChiDinh.DataType = DbType.String;
				colvarNgayChiDinh.MaxLength = 10;
				colvarNgayChiDinh.AutoIncrement = false;
				colvarNgayChiDinh.IsNullable = true;
				colvarNgayChiDinh.IsPrimaryKey = false;
				colvarNgayChiDinh.IsForeignKey = false;
				colvarNgayChiDinh.IsReadOnly = false;
				colvarNgayChiDinh.DefaultSetting = @"";
				colvarNgayChiDinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayChiDinh);
				
				TableSchema.TableColumn colvarBacSiChiDinh = new TableSchema.TableColumn(schema);
				colvarBacSiChiDinh.ColumnName = "BacSiChiDinh";
				colvarBacSiChiDinh.DataType = DbType.String;
				colvarBacSiChiDinh.MaxLength = 300;
				colvarBacSiChiDinh.AutoIncrement = false;
				colvarBacSiChiDinh.IsNullable = true;
				colvarBacSiChiDinh.IsPrimaryKey = false;
				colvarBacSiChiDinh.IsForeignKey = false;
				colvarBacSiChiDinh.IsReadOnly = false;
				colvarBacSiChiDinh.DefaultSetting = @"";
				colvarBacSiChiDinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBacSiChiDinh);
				
				TableSchema.TableColumn colvarDaTra = new TableSchema.TableColumn(schema);
				colvarDaTra.ColumnName = "DaTra";
				colvarDaTra.DataType = DbType.String;
				colvarDaTra.MaxLength = 10;
				colvarDaTra.AutoIncrement = false;
				colvarDaTra.IsNullable = true;
				colvarDaTra.IsPrimaryKey = false;
				colvarDaTra.IsForeignKey = false;
				colvarDaTra.IsReadOnly = false;
				colvarDaTra.DefaultSetting = @"";
				colvarDaTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaTra);
				
				TableSchema.TableColumn colvarNhanXet = new TableSchema.TableColumn(schema);
				colvarNhanXet.ColumnName = "NhanXet";
				colvarNhanXet.DataType = DbType.String;
				colvarNhanXet.MaxLength = 200;
				colvarNhanXet.AutoIncrement = false;
				colvarNhanXet.IsNullable = true;
				colvarNhanXet.IsPrimaryKey = false;
				colvarNhanXet.IsForeignKey = false;
				colvarNhanXet.IsReadOnly = false;
				colvarNhanXet.DefaultSetting = @"";
				colvarNhanXet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhanXet);
				
				TableSchema.TableColumn colvarIDKhoa = new TableSchema.TableColumn(schema);
				colvarIDKhoa.ColumnName = "IDKhoa";
				colvarIDKhoa.DataType = DbType.String;
				colvarIDKhoa.MaxLength = 50;
				colvarIDKhoa.AutoIncrement = false;
				colvarIDKhoa.IsNullable = true;
				colvarIDKhoa.IsPrimaryKey = false;
				colvarIDKhoa.IsForeignKey = false;
				colvarIDKhoa.IsReadOnly = false;
				colvarIDKhoa.DefaultSetting = @"";
				colvarIDKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIDKhoa);
				
				TableSchema.TableColumn colvarIDBacSi = new TableSchema.TableColumn(schema);
				colvarIDBacSi.ColumnName = "IDBacSi";
				colvarIDBacSi.DataType = DbType.String;
				colvarIDBacSi.MaxLength = 50;
				colvarIDBacSi.AutoIncrement = false;
				colvarIDBacSi.IsNullable = true;
				colvarIDBacSi.IsPrimaryKey = false;
				colvarIDBacSi.IsForeignKey = false;
				colvarIDBacSi.IsReadOnly = false;
				colvarIDBacSi.DefaultSetting = @"";
				colvarIDBacSi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIDBacSi);
				
				TableSchema.TableColumn colvarNgayNhan = new TableSchema.TableColumn(schema);
				colvarNgayNhan.ColumnName = "NgayNhan";
				colvarNgayNhan.DataType = DbType.DateTime;
				colvarNgayNhan.MaxLength = 0;
				colvarNgayNhan.AutoIncrement = false;
				colvarNgayNhan.IsNullable = true;
				colvarNgayNhan.IsPrimaryKey = false;
				colvarNgayNhan.IsForeignKey = false;
				colvarNgayNhan.IsReadOnly = false;
				
						colvarNgayNhan.DefaultSetting = @"(getdate())";
				colvarNgayNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayNhan);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("tbl_HISLIS_Patients",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MaBN")]
		[Bindable(true)]
		public string MaBN 
		{
			get { return GetColumnValue<string>(Columns.MaBN); }
			set { SetColumnValue(Columns.MaBN, value); }
		}
		  
		[XmlAttribute("HoTen")]
		[Bindable(true)]
		public string HoTen 
		{
			get { return GetColumnValue<string>(Columns.HoTen); }
			set { SetColumnValue(Columns.HoTen, value); }
		}
		  
		[XmlAttribute("Tuoi")]
		[Bindable(true)]
		public string Tuoi 
		{
			get { return GetColumnValue<string>(Columns.Tuoi); }
			set { SetColumnValue(Columns.Tuoi, value); }
		}
		  
		[XmlAttribute("GioiTinh")]
		[Bindable(true)]
		public string GioiTinh 
		{
			get { return GetColumnValue<string>(Columns.GioiTinh); }
			set { SetColumnValue(Columns.GioiTinh, value); }
		}
		  
		[XmlAttribute("SoPhong")]
		[Bindable(true)]
		public string SoPhong 
		{
			get { return GetColumnValue<string>(Columns.SoPhong); }
			set { SetColumnValue(Columns.SoPhong, value); }
		}
		  
		[XmlAttribute("SoGiuong")]
		[Bindable(true)]
		public string SoGiuong 
		{
			get { return GetColumnValue<string>(Columns.SoGiuong); }
			set { SetColumnValue(Columns.SoGiuong, value); }
		}
		  
		[XmlAttribute("NgayTraKetQua")]
		[Bindable(true)]
		public string NgayTraKetQua 
		{
			get { return GetColumnValue<string>(Columns.NgayTraKetQua); }
			set { SetColumnValue(Columns.NgayTraKetQua, value); }
		}
		  
		[XmlAttribute("BacSyChuyenKhoa")]
		[Bindable(true)]
		public string BacSyChuyenKhoa 
		{
			get { return GetColumnValue<string>(Columns.BacSyChuyenKhoa); }
			set { SetColumnValue(Columns.BacSyChuyenKhoa, value); }
		}
		  
		[XmlAttribute("Khoa")]
		[Bindable(true)]
		public string Khoa 
		{
			get { return GetColumnValue<string>(Columns.Khoa); }
			set { SetColumnValue(Columns.Khoa, value); }
		}
		  
		[XmlAttribute("DoiTuong")]
		[Bindable(true)]
		public string DoiTuong 
		{
			get { return GetColumnValue<string>(Columns.DoiTuong); }
			set { SetColumnValue(Columns.DoiTuong, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("LoaiChiDinh")]
		[Bindable(true)]
		public string LoaiChiDinh 
		{
			get { return GetColumnValue<string>(Columns.LoaiChiDinh); }
			set { SetColumnValue(Columns.LoaiChiDinh, value); }
		}
		  
		[XmlAttribute("SoPhieuChiDinh")]
		[Bindable(true)]
		public string SoPhieuChiDinh 
		{
			get { return GetColumnValue<string>(Columns.SoPhieuChiDinh); }
			set { SetColumnValue(Columns.SoPhieuChiDinh, value); }
		}
		  
		[XmlAttribute("TenPhieuXetNghiem")]
		[Bindable(true)]
		public string TenPhieuXetNghiem 
		{
			get { return GetColumnValue<string>(Columns.TenPhieuXetNghiem); }
			set { SetColumnValue(Columns.TenPhieuXetNghiem, value); }
		}
		  
		[XmlAttribute("NgayChiDinh")]
		[Bindable(true)]
		public string NgayChiDinh 
		{
			get { return GetColumnValue<string>(Columns.NgayChiDinh); }
			set { SetColumnValue(Columns.NgayChiDinh, value); }
		}
		  
		[XmlAttribute("BacSiChiDinh")]
		[Bindable(true)]
		public string BacSiChiDinh 
		{
			get { return GetColumnValue<string>(Columns.BacSiChiDinh); }
			set { SetColumnValue(Columns.BacSiChiDinh, value); }
		}
		  
		[XmlAttribute("DaTra")]
		[Bindable(true)]
		public string DaTra 
		{
			get { return GetColumnValue<string>(Columns.DaTra); }
			set { SetColumnValue(Columns.DaTra, value); }
		}
		  
		[XmlAttribute("NhanXet")]
		[Bindable(true)]
		public string NhanXet 
		{
			get { return GetColumnValue<string>(Columns.NhanXet); }
			set { SetColumnValue(Columns.NhanXet, value); }
		}
		  
		[XmlAttribute("IDKhoa")]
		[Bindable(true)]
		public string IDKhoa 
		{
			get { return GetColumnValue<string>(Columns.IDKhoa); }
			set { SetColumnValue(Columns.IDKhoa, value); }
		}
		  
		[XmlAttribute("IDBacSi")]
		[Bindable(true)]
		public string IDBacSi 
		{
			get { return GetColumnValue<string>(Columns.IDBacSi); }
			set { SetColumnValue(Columns.IDBacSi, value); }
		}
		  
		[XmlAttribute("NgayNhan")]
		[Bindable(true)]
		public DateTime? NgayNhan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayNhan); }
			set { SetColumnValue(Columns.NgayNhan, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaBN,string varHoTen,string varTuoi,string varGioiTinh,string varSoPhong,string varSoGiuong,string varNgayTraKetQua,string varBacSyChuyenKhoa,string varKhoa,string varDoiTuong,string varChanDoan,string varLoaiChiDinh,string varSoPhieuChiDinh,string varTenPhieuXetNghiem,string varNgayChiDinh,string varBacSiChiDinh,string varDaTra,string varNhanXet,string varIDKhoa,string varIDBacSi,DateTime? varNgayNhan)
		{
			TblHislisPatient item = new TblHislisPatient();
			
			item.MaBN = varMaBN;
			
			item.HoTen = varHoTen;
			
			item.Tuoi = varTuoi;
			
			item.GioiTinh = varGioiTinh;
			
			item.SoPhong = varSoPhong;
			
			item.SoGiuong = varSoGiuong;
			
			item.NgayTraKetQua = varNgayTraKetQua;
			
			item.BacSyChuyenKhoa = varBacSyChuyenKhoa;
			
			item.Khoa = varKhoa;
			
			item.DoiTuong = varDoiTuong;
			
			item.ChanDoan = varChanDoan;
			
			item.LoaiChiDinh = varLoaiChiDinh;
			
			item.SoPhieuChiDinh = varSoPhieuChiDinh;
			
			item.TenPhieuXetNghiem = varTenPhieuXetNghiem;
			
			item.NgayChiDinh = varNgayChiDinh;
			
			item.BacSiChiDinh = varBacSiChiDinh;
			
			item.DaTra = varDaTra;
			
			item.NhanXet = varNhanXet;
			
			item.IDKhoa = varIDKhoa;
			
			item.IDBacSi = varIDBacSi;
			
			item.NgayNhan = varNgayNhan;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varMaBN,string varHoTen,string varTuoi,string varGioiTinh,string varSoPhong,string varSoGiuong,string varNgayTraKetQua,string varBacSyChuyenKhoa,string varKhoa,string varDoiTuong,string varChanDoan,string varLoaiChiDinh,string varSoPhieuChiDinh,string varTenPhieuXetNghiem,string varNgayChiDinh,string varBacSiChiDinh,string varDaTra,string varNhanXet,string varIDKhoa,string varIDBacSi,DateTime? varNgayNhan)
		{
			TblHislisPatient item = new TblHislisPatient();
			
				item.Id = varId;
			
				item.MaBN = varMaBN;
			
				item.HoTen = varHoTen;
			
				item.Tuoi = varTuoi;
			
				item.GioiTinh = varGioiTinh;
			
				item.SoPhong = varSoPhong;
			
				item.SoGiuong = varSoGiuong;
			
				item.NgayTraKetQua = varNgayTraKetQua;
			
				item.BacSyChuyenKhoa = varBacSyChuyenKhoa;
			
				item.Khoa = varKhoa;
			
				item.DoiTuong = varDoiTuong;
			
				item.ChanDoan = varChanDoan;
			
				item.LoaiChiDinh = varLoaiChiDinh;
			
				item.SoPhieuChiDinh = varSoPhieuChiDinh;
			
				item.TenPhieuXetNghiem = varTenPhieuXetNghiem;
			
				item.NgayChiDinh = varNgayChiDinh;
			
				item.BacSiChiDinh = varBacSiChiDinh;
			
				item.DaTra = varDaTra;
			
				item.NhanXet = varNhanXet;
			
				item.IDKhoa = varIDKhoa;
			
				item.IDBacSi = varIDBacSi;
			
				item.NgayNhan = varNgayNhan;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBNColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn HoTenColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TuoiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn GioiTinhColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn SoPhongColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SoGiuongColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTraKetQuaColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn BacSyChuyenKhoaColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn KhoaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DoiTuongColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiChiDinhColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn SoPhieuChiDinhColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn TenPhieuXetNghiemColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayChiDinhColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn BacSiChiDinhColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn DaTraColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NhanXetColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn IDKhoaColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn IDBacSiColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayNhanColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string MaBN = @"MaBN";
			 public static string HoTen = @"HoTen";
			 public static string Tuoi = @"Tuoi";
			 public static string GioiTinh = @"GioiTinh";
			 public static string SoPhong = @"SoPhong";
			 public static string SoGiuong = @"SoGiuong";
			 public static string NgayTraKetQua = @"NgayTraKetQua";
			 public static string BacSyChuyenKhoa = @"BacSyChuyenKhoa";
			 public static string Khoa = @"Khoa";
			 public static string DoiTuong = @"DoiTuong";
			 public static string ChanDoan = @"ChanDoan";
			 public static string LoaiChiDinh = @"LoaiChiDinh";
			 public static string SoPhieuChiDinh = @"SoPhieuChiDinh";
			 public static string TenPhieuXetNghiem = @"TenPhieuXetNghiem";
			 public static string NgayChiDinh = @"NgayChiDinh";
			 public static string BacSiChiDinh = @"BacSiChiDinh";
			 public static string DaTra = @"DaTra";
			 public static string NhanXet = @"NhanXet";
			 public static string IDKhoa = @"IDKhoa";
			 public static string IDBacSi = @"IDBacSi";
			 public static string NgayNhan = @"NgayNhan";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
