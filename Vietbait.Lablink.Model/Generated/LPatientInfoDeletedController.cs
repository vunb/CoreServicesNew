using System;
using System.ComponentModel;
using System.Threading;
using System.Web;
using SubSonic;

// <auto-generated />

namespace Vietbait.Lablink.Model
{
    /// <summary>
    ///     Controller class for L_PATIENT_INFO_DELETED
    /// </summary>
    [DataObject]
    public class LPatientInfoDeletedController
    {
        // Preload our schema..
        private LPatientInfoDeleted thisSchemaLoad = new LPatientInfoDeleted();
        private string userName = String.Empty;

        protected string UserName
        {
            get
            {
                if (userName.Length == 0)
                {
                    if (HttpContext.Current != null)
                    {
                        userName = HttpContext.Current.User.Identity.Name;
                    }
                    else
                    {
                        userName = Thread.CurrentPrincipal.Identity.Name;
                    }
                }
                return userName;
            }
        }

        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public LPatientInfoDeletedCollection FetchAll()
        {
            var coll = new LPatientInfoDeletedCollection();
            var qry = new Query(LPatientInfoDeleted.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LPatientInfoDeletedCollection FetchByID(object Id)
        {
            LPatientInfoDeletedCollection coll = new LPatientInfoDeletedCollection().Where("Id", Id).Load();
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public LPatientInfoDeletedCollection FetchByQuery(Query qry)
        {
            var coll = new LPatientInfoDeletedCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (LPatientInfoDeleted.Delete(Id) == 1);
        }

        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (LPatientInfoDeleted.Destroy(Id) == 1);
        }


        /// <summary>
        ///     Inserts a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public void Insert(decimal? PatientId, string Pid, string PatientName, string Address, short? Age,
            int? YearBirth, byte? Sex, string InsuranceNum, DateTime? Dateupdate, string Diagnostic, string IdentifyNum,
            short? DepartmentID, string Room, string Bed, short? ObjectType)
        {
            var item = new LPatientInfoDeleted();

            item.PatientId = PatientId;

            item.Pid = Pid;

            item.PatientName = PatientName;

            item.Address = Address;

            item.Age = Age;

            item.YearBirth = YearBirth;

            item.Sex = Sex;

            item.InsuranceNum = InsuranceNum;

            item.Dateupdate = Dateupdate;

            item.Diagnostic = Diagnostic;

            item.IdentifyNum = IdentifyNum;

            item.DepartmentID = DepartmentID;

            item.Room = Room;

            item.Bed = Bed;

            item.ObjectType = ObjectType;


            item.Save(UserName);
        }

        /// <summary>
        ///     Updates a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public void Update(decimal Id, decimal? PatientId, string Pid, string PatientName, string Address, short? Age,
            int? YearBirth, byte? Sex, string InsuranceNum, DateTime? Dateupdate, string Diagnostic, string IdentifyNum,
            short? DepartmentID, string Room, string Bed, short? ObjectType)
        {
            var item = new LPatientInfoDeleted();
            item.MarkOld();
            item.IsLoaded = true;

            item.Id = Id;

            item.PatientId = PatientId;

            item.Pid = Pid;

            item.PatientName = PatientName;

            item.Address = Address;

            item.Age = Age;

            item.YearBirth = YearBirth;

            item.Sex = Sex;

            item.InsuranceNum = InsuranceNum;

            item.Dateupdate = Dateupdate;

            item.Diagnostic = Diagnostic;

            item.IdentifyNum = IdentifyNum;

            item.DepartmentID = DepartmentID;

            item.Room = Room;

            item.Bed = Bed;

            item.ObjectType = ObjectType;

            item.Save(UserName);
        }
    }
}