using System;
using System.ComponentModel;
using System.Threading;
using System.Web;
using SubSonic;

// <auto-generated />

namespace Vietbait.Lablink.Model
{
    /// <summary>
    ///     Controller class for D_Device_Port
    /// </summary>
    [DataObject]
    public class DDevicePortController
    {
        // Preload our schema..
        private DDevicePort thisSchemaLoad = new DDevicePort();
        private string userName = String.Empty;

        protected string UserName
        {
            get
            {
                if (userName.Length == 0)
                {
                    if (HttpContext.Current != null)
                    {
                        userName = HttpContext.Current.User.Identity.Name;
                    }
                    else
                    {
                        userName = Thread.CurrentPrincipal.Identity.Name;
                    }
                }
                return userName;
            }
        }

        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DDevicePortCollection FetchAll()
        {
            var coll = new DDevicePortCollection();
            var qry = new Query(DDevicePort.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DDevicePortCollection FetchByID(object PortId)
        {
            DDevicePortCollection coll = new DDevicePortCollection().Where("Port_ID", PortId).Load();
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DDevicePortCollection FetchByQuery(Query qry)
        {
            var coll = new DDevicePortCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PortId)
        {
            return (DDevicePort.Delete(PortId) == 1);
        }

        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PortId)
        {
            return (DDevicePort.Destroy(PortId) == 1);
        }


        /// <summary>
        ///     Inserts a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public void Insert(int PortId, string PortName, string Description)
        {
            var item = new DDevicePort();

            item.PortId = PortId;

            item.PortName = PortName;

            item.Description = Description;


            item.Save(UserName);
        }

        /// <summary>
        ///     Updates a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public void Update(int PortId, string PortName, string Description)
        {
            var item = new DDevicePort();
            item.MarkOld();
            item.IsLoaded = true;

            item.PortId = PortId;

            item.PortName = PortName;

            item.Description = Description;

            item.Save(UserName);
        }
    }
}