using System;
using System.ComponentModel;
using System.Threading;
using System.Web;
using SubSonic;

// <auto-generated />

namespace Vietbait.Lablink.Model
{
    /// <summary>
    ///     Controller class for tbl_Trinhky
    /// </summary>
    [DataObject]
    public class TblTrinhkyController
    {
        // Preload our schema..
        private TblTrinhky thisSchemaLoad = new TblTrinhky();
        private string userName = String.Empty;

        protected string UserName
        {
            get
            {
                if (userName.Length == 0)
                {
                    if (HttpContext.Current != null)
                    {
                        userName = HttpContext.Current.User.Identity.Name;
                    }
                    else
                    {
                        userName = Thread.CurrentPrincipal.Identity.Name;
                    }
                }
                return userName;
            }
        }

        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblTrinhkyCollection FetchAll()
        {
            var coll = new TblTrinhkyCollection();
            var qry = new Query(TblTrinhky.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblTrinhkyCollection FetchByID(object ReportName)
        {
            TblTrinhkyCollection coll = new TblTrinhkyCollection().Where("ReportName", ReportName).Load();
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblTrinhkyCollection FetchByQuery(Query qry)
        {
            var coll = new TblTrinhkyCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object ReportName)
        {
            return (TblTrinhky.Delete(ReportName) == 1);
        }

        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object ReportName)
        {
            return (TblTrinhky.Destroy(ReportName) == 1);
        }


        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(string ReportName, string ObjectName)
        {
            var qry = new Query(TblTrinhky.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("ReportName", ReportName).AND("ObjectName", ObjectName);
            qry.Execute();
            return (true);
        }


        /// <summary>
        ///     Inserts a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public void Insert(string ReportName, string ObjectName, string FontName, int? FontSize, string FontStype,
            string ObjectContent)
        {
            var item = new TblTrinhky();

            item.ReportName = ReportName;

            item.ObjectName = ObjectName;

            item.FontName = FontName;

            item.FontSize = FontSize;

            item.FontStype = FontStype;

            item.ObjectContent = ObjectContent;


            item.Save(UserName);
        }

        /// <summary>
        ///     Updates a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public void Update(string ReportName, string ObjectName, string FontName, int? FontSize, string FontStype,
            string ObjectContent)
        {
            var item = new TblTrinhky();
            item.MarkOld();
            item.IsLoaded = true;

            item.ReportName = ReportName;

            item.ObjectName = ObjectName;

            item.FontName = FontName;

            item.FontSize = FontSize;

            item.FontStype = FontStype;

            item.ObjectContent = ObjectContent;

            item.Save(UserName);
        }
    }
}