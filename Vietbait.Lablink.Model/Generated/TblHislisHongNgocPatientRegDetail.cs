using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Vietbait.Lablink.Model
{
	/// <summary>
	/// Strongly-typed collection for the TblHislisHongNgocPatientRegDetail class.
	/// </summary>
    [Serializable]
	public partial class TblHislisHongNgocPatientRegDetailCollection : ActiveList<TblHislisHongNgocPatientRegDetail, TblHislisHongNgocPatientRegDetailCollection>
	{	   
		public TblHislisHongNgocPatientRegDetailCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TblHislisHongNgocPatientRegDetailCollection</returns>
		public TblHislisHongNgocPatientRegDetailCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TblHislisHongNgocPatientRegDetail o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the tbl_HISLIS_HongNgoc_PatientReg_Detail table.
	/// </summary>
	[Serializable]
	public partial class TblHislisHongNgocPatientRegDetail : ActiveRecord<TblHislisHongNgocPatientRegDetail>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TblHislisHongNgocPatientRegDetail()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TblHislisHongNgocPatientRegDetail(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TblHislisHongNgocPatientRegDetail(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TblHislisHongNgocPatientRegDetail(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("tbl_HISLIS_HongNgoc_PatientReg_Detail", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarNhomDichVuId = new TableSchema.TableColumn(schema);
				colvarNhomDichVuId.ColumnName = "NhomDichVu_Id";
				colvarNhomDichVuId.DataType = DbType.Int32;
				colvarNhomDichVuId.MaxLength = 0;
				colvarNhomDichVuId.AutoIncrement = false;
				colvarNhomDichVuId.IsNullable = true;
				colvarNhomDichVuId.IsPrimaryKey = false;
				colvarNhomDichVuId.IsForeignKey = false;
				colvarNhomDichVuId.IsReadOnly = false;
				colvarNhomDichVuId.DefaultSetting = @"";
				colvarNhomDichVuId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhomDichVuId);
				
				TableSchema.TableColumn colvarTenNhomDichVu = new TableSchema.TableColumn(schema);
				colvarTenNhomDichVu.ColumnName = "TenNhomDichVu";
				colvarTenNhomDichVu.DataType = DbType.String;
				colvarTenNhomDichVu.MaxLength = 250;
				colvarTenNhomDichVu.AutoIncrement = false;
				colvarTenNhomDichVu.IsNullable = true;
				colvarTenNhomDichVu.IsPrimaryKey = false;
				colvarTenNhomDichVu.IsForeignKey = false;
				colvarTenNhomDichVu.IsReadOnly = false;
				colvarTenNhomDichVu.DefaultSetting = @"";
				colvarTenNhomDichVu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenNhomDichVu);
				
				TableSchema.TableColumn colvarDichVuId = new TableSchema.TableColumn(schema);
				colvarDichVuId.ColumnName = "DichVu_Id";
				colvarDichVuId.DataType = DbType.Int32;
				colvarDichVuId.MaxLength = 0;
				colvarDichVuId.AutoIncrement = false;
				colvarDichVuId.IsNullable = true;
				colvarDichVuId.IsPrimaryKey = false;
				colvarDichVuId.IsForeignKey = false;
				colvarDichVuId.IsReadOnly = false;
				colvarDichVuId.DefaultSetting = @"";
				colvarDichVuId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDichVuId);
				
				TableSchema.TableColumn colvarMaDichVu = new TableSchema.TableColumn(schema);
				colvarMaDichVu.ColumnName = "MaDichVu";
				colvarMaDichVu.DataType = DbType.String;
				colvarMaDichVu.MaxLength = 20;
				colvarMaDichVu.AutoIncrement = false;
				colvarMaDichVu.IsNullable = true;
				colvarMaDichVu.IsPrimaryKey = false;
				colvarMaDichVu.IsForeignKey = false;
				colvarMaDichVu.IsReadOnly = false;
				colvarMaDichVu.DefaultSetting = @"";
				colvarMaDichVu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDichVu);
				
				TableSchema.TableColumn colvarTenDichVu = new TableSchema.TableColumn(schema);
				colvarTenDichVu.ColumnName = "TenDichVu";
				colvarTenDichVu.DataType = DbType.String;
				colvarTenDichVu.MaxLength = 250;
				colvarTenDichVu.AutoIncrement = false;
				colvarTenDichVu.IsNullable = true;
				colvarTenDichVu.IsPrimaryKey = false;
				colvarTenDichVu.IsForeignKey = false;
				colvarTenDichVu.IsReadOnly = false;
				colvarTenDichVu.DefaultSetting = @"";
				colvarTenDichVu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenDichVu);
				
				TableSchema.TableColumn colvarMaTat = new TableSchema.TableColumn(schema);
				colvarMaTat.ColumnName = "MaTat";
				colvarMaTat.DataType = DbType.String;
				colvarMaTat.MaxLength = 50;
				colvarMaTat.AutoIncrement = false;
				colvarMaTat.IsNullable = true;
				colvarMaTat.IsPrimaryKey = false;
				colvarMaTat.IsForeignKey = false;
				colvarMaTat.IsReadOnly = false;
				colvarMaTat.DefaultSetting = @"";
				colvarMaTat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaTat);
				
				TableSchema.TableColumn colvarCLSYeuCauId = new TableSchema.TableColumn(schema);
				colvarCLSYeuCauId.ColumnName = "CLSYeuCau_Id";
				colvarCLSYeuCauId.DataType = DbType.Int32;
				colvarCLSYeuCauId.MaxLength = 0;
				colvarCLSYeuCauId.AutoIncrement = false;
				colvarCLSYeuCauId.IsNullable = true;
				colvarCLSYeuCauId.IsPrimaryKey = false;
				colvarCLSYeuCauId.IsForeignKey = false;
				colvarCLSYeuCauId.IsReadOnly = false;
				colvarCLSYeuCauId.DefaultSetting = @"";
				colvarCLSYeuCauId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCLSYeuCauId);
				
				TableSchema.TableColumn colvarDichVuLevel = new TableSchema.TableColumn(schema);
				colvarDichVuLevel.ColumnName = "DichVuLevel";
				colvarDichVuLevel.DataType = DbType.Int32;
				colvarDichVuLevel.MaxLength = 0;
				colvarDichVuLevel.AutoIncrement = false;
				colvarDichVuLevel.IsNullable = true;
				colvarDichVuLevel.IsPrimaryKey = false;
				colvarDichVuLevel.IsForeignKey = false;
				colvarDichVuLevel.IsReadOnly = false;
				colvarDichVuLevel.DefaultSetting = @"";
				colvarDichVuLevel.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDichVuLevel);
				
				TableSchema.TableColumn colvarDichvuIdFillter = new TableSchema.TableColumn(schema);
				colvarDichvuIdFillter.ColumnName = "Dichvu_ID_Fillter";
				colvarDichvuIdFillter.DataType = DbType.Int32;
				colvarDichvuIdFillter.MaxLength = 0;
				colvarDichvuIdFillter.AutoIncrement = false;
				colvarDichvuIdFillter.IsNullable = true;
				colvarDichvuIdFillter.IsPrimaryKey = false;
				colvarDichvuIdFillter.IsForeignKey = false;
				colvarDichvuIdFillter.IsReadOnly = false;
				colvarDichvuIdFillter.DefaultSetting = @"";
				colvarDichvuIdFillter.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDichvuIdFillter);
				
				TableSchema.TableColumn colvarBarcode = new TableSchema.TableColumn(schema);
				colvarBarcode.ColumnName = "Barcode";
				colvarBarcode.DataType = DbType.String;
				colvarBarcode.MaxLength = 20;
				colvarBarcode.AutoIncrement = false;
				colvarBarcode.IsNullable = true;
				colvarBarcode.IsPrimaryKey = false;
				colvarBarcode.IsForeignKey = false;
				colvarBarcode.IsReadOnly = false;
				colvarBarcode.DefaultSetting = @"";
				colvarBarcode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBarcode);
				
				TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
				colvarStatus.ColumnName = "Status";
				colvarStatus.DataType = DbType.Int16;
				colvarStatus.MaxLength = 0;
				colvarStatus.AutoIncrement = false;
				colvarStatus.IsNullable = true;
				colvarStatus.IsPrimaryKey = false;
				colvarStatus.IsForeignKey = false;
				colvarStatus.IsReadOnly = false;
				colvarStatus.DefaultSetting = @"";
				colvarStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStatus);
				
				TableSchema.TableColumn colvarCLSKetQuaId = new TableSchema.TableColumn(schema);
				colvarCLSKetQuaId.ColumnName = "CLSKetQua_Id";
				colvarCLSKetQuaId.DataType = DbType.Int32;
				colvarCLSKetQuaId.MaxLength = 0;
				colvarCLSKetQuaId.AutoIncrement = false;
				colvarCLSKetQuaId.IsNullable = true;
				colvarCLSKetQuaId.IsPrimaryKey = false;
				colvarCLSKetQuaId.IsForeignKey = false;
				colvarCLSKetQuaId.IsReadOnly = false;
				colvarCLSKetQuaId.DefaultSetting = @"";
				colvarCLSKetQuaId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCLSKetQuaId);
				
				TableSchema.TableColumn colvarKetQua = new TableSchema.TableColumn(schema);
				colvarKetQua.ColumnName = "KetQua";
				colvarKetQua.DataType = DbType.String;
				colvarKetQua.MaxLength = 250;
				colvarKetQua.AutoIncrement = false;
				colvarKetQua.IsNullable = true;
				colvarKetQua.IsPrimaryKey = false;
				colvarKetQua.IsForeignKey = false;
				colvarKetQua.IsReadOnly = false;
				colvarKetQua.DefaultSetting = @"";
				colvarKetQua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetQua);
				
				TableSchema.TableColumn colvarTranferdate = new TableSchema.TableColumn(schema);
				colvarTranferdate.ColumnName = "Tranferdate";
				colvarTranferdate.DataType = DbType.DateTime;
				colvarTranferdate.MaxLength = 0;
				colvarTranferdate.AutoIncrement = false;
				colvarTranferdate.IsNullable = true;
				colvarTranferdate.IsPrimaryKey = false;
				colvarTranferdate.IsForeignKey = false;
				colvarTranferdate.IsReadOnly = false;
				colvarTranferdate.DefaultSetting = @"";
				colvarTranferdate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTranferdate);
				
				TableSchema.TableColumn colvarCLSKetQuaChiTietId = new TableSchema.TableColumn(schema);
				colvarCLSKetQuaChiTietId.ColumnName = "CLSKetQuaChiTiet_Id";
				colvarCLSKetQuaChiTietId.DataType = DbType.Int32;
				colvarCLSKetQuaChiTietId.MaxLength = 0;
				colvarCLSKetQuaChiTietId.AutoIncrement = false;
				colvarCLSKetQuaChiTietId.IsNullable = true;
				colvarCLSKetQuaChiTietId.IsPrimaryKey = false;
				colvarCLSKetQuaChiTietId.IsForeignKey = false;
				colvarCLSKetQuaChiTietId.IsReadOnly = false;
				colvarCLSKetQuaChiTietId.DefaultSetting = @"";
				colvarCLSKetQuaChiTietId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCLSKetQuaChiTietId);
				
				TableSchema.TableColumn colvarGiaTriChuan = new TableSchema.TableColumn(schema);
				colvarGiaTriChuan.ColumnName = "GiaTriChuan";
				colvarGiaTriChuan.DataType = DbType.String;
				colvarGiaTriChuan.MaxLength = 50;
				colvarGiaTriChuan.AutoIncrement = false;
				colvarGiaTriChuan.IsNullable = true;
				colvarGiaTriChuan.IsPrimaryKey = false;
				colvarGiaTriChuan.IsForeignKey = false;
				colvarGiaTriChuan.IsReadOnly = false;
				colvarGiaTriChuan.DefaultSetting = @"";
				colvarGiaTriChuan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiaTriChuan);
				
				TableSchema.TableColumn colvarDonViTinh = new TableSchema.TableColumn(schema);
				colvarDonViTinh.ColumnName = "DonViTinh";
				colvarDonViTinh.DataType = DbType.String;
				colvarDonViTinh.MaxLength = 50;
				colvarDonViTinh.AutoIncrement = false;
				colvarDonViTinh.IsNullable = true;
				colvarDonViTinh.IsPrimaryKey = false;
				colvarDonViTinh.IsForeignKey = false;
				colvarDonViTinh.IsReadOnly = false;
				colvarDonViTinh.DefaultSetting = @"";
				colvarDonViTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonViTinh);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("tbl_HISLIS_HongNgoc_PatientReg_Detail",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("NhomDichVuId")]
		[Bindable(true)]
		public int? NhomDichVuId 
		{
			get { return GetColumnValue<int?>(Columns.NhomDichVuId); }
			set { SetColumnValue(Columns.NhomDichVuId, value); }
		}
		  
		[XmlAttribute("TenNhomDichVu")]
		[Bindable(true)]
		public string TenNhomDichVu 
		{
			get { return GetColumnValue<string>(Columns.TenNhomDichVu); }
			set { SetColumnValue(Columns.TenNhomDichVu, value); }
		}
		  
		[XmlAttribute("DichVuId")]
		[Bindable(true)]
		public int? DichVuId 
		{
			get { return GetColumnValue<int?>(Columns.DichVuId); }
			set { SetColumnValue(Columns.DichVuId, value); }
		}
		  
		[XmlAttribute("MaDichVu")]
		[Bindable(true)]
		public string MaDichVu 
		{
			get { return GetColumnValue<string>(Columns.MaDichVu); }
			set { SetColumnValue(Columns.MaDichVu, value); }
		}
		  
		[XmlAttribute("TenDichVu")]
		[Bindable(true)]
		public string TenDichVu 
		{
			get { return GetColumnValue<string>(Columns.TenDichVu); }
			set { SetColumnValue(Columns.TenDichVu, value); }
		}
		  
		[XmlAttribute("MaTat")]
		[Bindable(true)]
		public string MaTat 
		{
			get { return GetColumnValue<string>(Columns.MaTat); }
			set { SetColumnValue(Columns.MaTat, value); }
		}
		  
		[XmlAttribute("CLSYeuCauId")]
		[Bindable(true)]
		public int? CLSYeuCauId 
		{
			get { return GetColumnValue<int?>(Columns.CLSYeuCauId); }
			set { SetColumnValue(Columns.CLSYeuCauId, value); }
		}
		  
		[XmlAttribute("DichVuLevel")]
		[Bindable(true)]
		public int? DichVuLevel 
		{
			get { return GetColumnValue<int?>(Columns.DichVuLevel); }
			set { SetColumnValue(Columns.DichVuLevel, value); }
		}
		  
		[XmlAttribute("DichvuIdFillter")]
		[Bindable(true)]
		public int? DichvuIdFillter 
		{
			get { return GetColumnValue<int?>(Columns.DichvuIdFillter); }
			set { SetColumnValue(Columns.DichvuIdFillter, value); }
		}
		  
		[XmlAttribute("Barcode")]
		[Bindable(true)]
		public string Barcode 
		{
			get { return GetColumnValue<string>(Columns.Barcode); }
			set { SetColumnValue(Columns.Barcode, value); }
		}
		  
		[XmlAttribute("Status")]
		[Bindable(true)]
		public short? Status 
		{
			get { return GetColumnValue<short?>(Columns.Status); }
			set { SetColumnValue(Columns.Status, value); }
		}
		  
		[XmlAttribute("CLSKetQuaId")]
		[Bindable(true)]
		public int? CLSKetQuaId 
		{
			get { return GetColumnValue<int?>(Columns.CLSKetQuaId); }
			set { SetColumnValue(Columns.CLSKetQuaId, value); }
		}
		  
		[XmlAttribute("KetQua")]
		[Bindable(true)]
		public string KetQua 
		{
			get { return GetColumnValue<string>(Columns.KetQua); }
			set { SetColumnValue(Columns.KetQua, value); }
		}
		  
		[XmlAttribute("Tranferdate")]
		[Bindable(true)]
		public DateTime? Tranferdate 
		{
			get { return GetColumnValue<DateTime?>(Columns.Tranferdate); }
			set { SetColumnValue(Columns.Tranferdate, value); }
		}
		  
		[XmlAttribute("CLSKetQuaChiTietId")]
		[Bindable(true)]
		public int? CLSKetQuaChiTietId 
		{
			get { return GetColumnValue<int?>(Columns.CLSKetQuaChiTietId); }
			set { SetColumnValue(Columns.CLSKetQuaChiTietId, value); }
		}
		  
		[XmlAttribute("GiaTriChuan")]
		[Bindable(true)]
		public string GiaTriChuan 
		{
			get { return GetColumnValue<string>(Columns.GiaTriChuan); }
			set { SetColumnValue(Columns.GiaTriChuan, value); }
		}
		  
		[XmlAttribute("DonViTinh")]
		[Bindable(true)]
		public string DonViTinh 
		{
			get { return GetColumnValue<string>(Columns.DonViTinh); }
			set { SetColumnValue(Columns.DonViTinh, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varNhomDichVuId,string varTenNhomDichVu,int? varDichVuId,string varMaDichVu,string varTenDichVu,string varMaTat,int? varCLSYeuCauId,int? varDichVuLevel,int? varDichvuIdFillter,string varBarcode,short? varStatus,int? varCLSKetQuaId,string varKetQua,DateTime? varTranferdate,int? varCLSKetQuaChiTietId,string varGiaTriChuan,string varDonViTinh)
		{
			TblHislisHongNgocPatientRegDetail item = new TblHislisHongNgocPatientRegDetail();
			
			item.NhomDichVuId = varNhomDichVuId;
			
			item.TenNhomDichVu = varTenNhomDichVu;
			
			item.DichVuId = varDichVuId;
			
			item.MaDichVu = varMaDichVu;
			
			item.TenDichVu = varTenDichVu;
			
			item.MaTat = varMaTat;
			
			item.CLSYeuCauId = varCLSYeuCauId;
			
			item.DichVuLevel = varDichVuLevel;
			
			item.DichvuIdFillter = varDichvuIdFillter;
			
			item.Barcode = varBarcode;
			
			item.Status = varStatus;
			
			item.CLSKetQuaId = varCLSKetQuaId;
			
			item.KetQua = varKetQua;
			
			item.Tranferdate = varTranferdate;
			
			item.CLSKetQuaChiTietId = varCLSKetQuaChiTietId;
			
			item.GiaTriChuan = varGiaTriChuan;
			
			item.DonViTinh = varDonViTinh;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,int? varNhomDichVuId,string varTenNhomDichVu,int? varDichVuId,string varMaDichVu,string varTenDichVu,string varMaTat,int? varCLSYeuCauId,int? varDichVuLevel,int? varDichvuIdFillter,string varBarcode,short? varStatus,int? varCLSKetQuaId,string varKetQua,DateTime? varTranferdate,int? varCLSKetQuaChiTietId,string varGiaTriChuan,string varDonViTinh)
		{
			TblHislisHongNgocPatientRegDetail item = new TblHislisHongNgocPatientRegDetail();
			
				item.Id = varId;
			
				item.NhomDichVuId = varNhomDichVuId;
			
				item.TenNhomDichVu = varTenNhomDichVu;
			
				item.DichVuId = varDichVuId;
			
				item.MaDichVu = varMaDichVu;
			
				item.TenDichVu = varTenDichVu;
			
				item.MaTat = varMaTat;
			
				item.CLSYeuCauId = varCLSYeuCauId;
			
				item.DichVuLevel = varDichVuLevel;
			
				item.DichvuIdFillter = varDichvuIdFillter;
			
				item.Barcode = varBarcode;
			
				item.Status = varStatus;
			
				item.CLSKetQuaId = varCLSKetQuaId;
			
				item.KetQua = varKetQua;
			
				item.Tranferdate = varTranferdate;
			
				item.CLSKetQuaChiTietId = varCLSKetQuaChiTietId;
			
				item.GiaTriChuan = varGiaTriChuan;
			
				item.DonViTinh = varDonViTinh;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn NhomDichVuIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenNhomDichVuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn DichVuIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDichVuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TenDichVuColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MaTatColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn CLSYeuCauIdColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn DichVuLevelColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DichvuIdFillterColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn BarcodeColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn StatusColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn CLSKetQuaIdColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn KetQuaColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn TranferdateColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn CLSKetQuaChiTietIdColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn GiaTriChuanColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn DonViTinhColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string NhomDichVuId = @"NhomDichVu_Id";
			 public static string TenNhomDichVu = @"TenNhomDichVu";
			 public static string DichVuId = @"DichVu_Id";
			 public static string MaDichVu = @"MaDichVu";
			 public static string TenDichVu = @"TenDichVu";
			 public static string MaTat = @"MaTat";
			 public static string CLSYeuCauId = @"CLSYeuCau_Id";
			 public static string DichVuLevel = @"DichVuLevel";
			 public static string DichvuIdFillter = @"Dichvu_ID_Fillter";
			 public static string Barcode = @"Barcode";
			 public static string Status = @"Status";
			 public static string CLSKetQuaId = @"CLSKetQua_Id";
			 public static string KetQua = @"KetQua";
			 public static string Tranferdate = @"Tranferdate";
			 public static string CLSKetQuaChiTietId = @"CLSKetQuaChiTiet_Id";
			 public static string GiaTriChuan = @"GiaTriChuan";
			 public static string DonViTinh = @"DonViTinh";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
